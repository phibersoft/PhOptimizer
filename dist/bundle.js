#!/usr/bin/env node
(()=>{"use strict";var e={877:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.colored=void 0,t.colored=(e,t="info")=>`${{info:"[36m",error:"[31m",success:"[32m"}[t]}${e}[0m`},915:function(e,t,o){var i=this&&this.__createBinding||(Object.create?function(e,t,o,i){void 0===i&&(i=o);var n=Object.getOwnPropertyDescriptor(t,o);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[o]}}),Object.defineProperty(e,i,n)}:function(e,t,o,i){void 0===i&&(i=o),e[i]=t[o]}),n=this&&this.__exportStar||function(e,t){for(var o in e)"default"===o||Object.prototype.hasOwnProperty.call(t,o)||i(t,e,o)};Object.defineProperty(t,"__esModule",{value:!0}),n(o(877),t),n(o(162),t),n(o(214),t)},162:function(e,t,o){var i=this&&this.__awaiter||function(e,t,o,i){return new(o||(o=Promise))((function(n,r){function a(e){try{s(i.next(e))}catch(e){r(e)}}function c(e){try{s(i.throw(e))}catch(e){r(e)}}function s(e){var t;e.done?n(e.value):(t=e.value,t instanceof o?t:new o((function(e){e(t)}))).then(a,c)}s((i=i.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.optimizer=void 0;const n=o(12);t.optimizer=(e,t,o,r,a=n.AUTO,c=80)=>i(void 0,void 0,void 0,(function*(){const i=`${e}\\${t}`,s=yield(0,n.read)(i);if(yield s.contain(r,a),yield s.quality(c),o)yield s.writeAsync(i);else{const o=t.split("."),i=o.slice(0,o.length-1).join("."),n=o[o.length-1];yield s.writeAsync(`${e}\\${i}-optimized.${n}`)}}))},214:(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0});const i=o(877);process.on("uncaughtException",((e,t)=>{console.log((0,i.colored)(e.message,"error")),console.log((0,i.colored)(t,"error"))}))},519:function(e,t,o){var i=this&&this.__awaiter||function(e,t,o,i){return new(o||(o=Promise))((function(n,r){function a(e){try{s(i.next(e))}catch(e){r(e)}}function c(e){try{s(i.throw(e))}catch(e){r(e)}}function s(e){var t;e.done?n(e.value):(t=e.value,t instanceof o?t:new o((function(e){e(t)}))).then(a,c)}s((i=i.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),o(214);const n=o(12),r=o(515),a=o(521),c=o(147),s=o(915),l=new r.ArgumentParser({description:"Phoptimizator is a simple image optimizator from -cli."}),u=(0,a.createInterface)({input:process.stdin,output:process.stdout}),d=["jpg","jpeg","png","tif","gif","bmp"];l.add_argument("-v","--version",{action:"version",version:o(598).i8}),l.add_argument("-f","--file",{help:"Image name on current path. Example: xxx.jpg",default:"ALL"}),l.add_argument("-p","--path",{help:"Image path destination. Default: process.cwd()",default:process.cwd()}),l.add_argument("-q","--quality",{help:"Image quality. Default: 70",default:70}),l.add_argument("-he","--height",{help:"Image height. Default: AUTO",default:n.AUTO}),l.add_argument("-w","--width",{help:"Image width. Default: 1920",default:1920}),l.add_argument("-o","--overwrite",{help:"Overwrite. If you set this option, optimized image overwrites original file with same name.",default:!1});const p=l.parse_args();i(void 0,void 0,void 0,(function*(){const e=Object.keys(p).reduce(((e,t)=>e+`${t}: ${p[t]}\n`),"Options: \n")+"\nAre you sure you want to continue? (y/n)";u.question(e,(e=>i(void 0,void 0,void 0,(function*(){if("y"===e.toLowerCase()){let e=[];"ALL"===p.file?(e=(yield c.promises.readdir(p.path)).filter((e=>{const t=e.split("."),o=t[t.length-1];return d.includes(o)})),console.log(e)):e.push(p.file);for(let t=0;t<e.length;t++){const o=e[t];console.log((0,s.colored)(`Optimizing ${o}... [${t+1}/${e.length}]`,"info")),yield(0,s.optimizer)(p.path,o,p.overwrite,p.width,p.height,p.quality)}console.log((0,s.colored)("Optimization completed!","success")),process.exit(5)}else console.log((0,s.colored)("Optimization canceled!","error")),process.exit(13)}))))}))},515:e=>{e.exports=require("argparse")},12:e=>{e.exports=require("jimp")},147:e=>{e.exports=require("fs")},521:e=>{e.exports=require("readline")},598:e=>{e.exports={i8:"2.5.5"}}},t={};!function o(i){var n=t[i];if(void 0!==n)return n.exports;var r=t[i]={exports:{}};return e[i].call(r.exports,r,r.exports,o),r.exports}(519)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,